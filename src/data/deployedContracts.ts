// This file is auto-generated by the generateTsAbis.js script.
// Do not edit this file directly.
//

const deployedContracts = {
  31337: {
    AssetFactory: {
      address: '0x05b4cb126885fb10464fdd12666feb25e2563b76',
      abi: [
        {
          type: 'constructor',
          inputs: [
            {
              name: '_initialOwner',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'balanceOf',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'id',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'balanceOfBatch',
          inputs: [
            {
              name: 'accounts',
              type: 'address[]',
              internalType: 'address[]',
            },
            {
              name: 'ids',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'burnAsset',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'burnBatch',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetIds',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'getAsset',
          inputs: [
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: 'asset',
              type: 'tuple',
              internalType: 'struct AssetFactory.Asset',
              components: [
                {
                  name: 'uri',
                  type: 'string',
                  internalType: 'string',
                },
                {
                  name: 'price',
                  type: 'uint256',
                  internalType: 'uint256',
                },
              ],
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getIGCTokenId',
          inputs: [],
          outputs: [
            {
              name: 'tokenId',
              type: 'uint8',
              internalType: 'uint8',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'getNextAssetId',
          inputs: [],
          outputs: [
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'isApprovedForAll',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'operator',
              type: 'address',
              internalType: 'address',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'mintAsset',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'data',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'mintBatch',
          inputs: [
            {
              name: 'to',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetIds',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'data',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'mintIGC',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'payable',
        },
        {
          type: 'function',
          name: 'onERC1155BatchReceived',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'onERC1155Received',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'owner',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'renounceOwnership',
          inputs: [],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'safeBatchTransferFrom',
          inputs: [
            {
              name: 'from',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'to',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'ids',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'values',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'data',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'safeTransferFrom',
          inputs: [
            {
              name: 'from',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'to',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'id',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'value',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'data',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'setApprovalForAll',
          inputs: [
            {
              name: 'operator',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'approved',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'setAssetData',
          inputs: [
            {
              name: 'assetUri',
              type: 'string',
              internalType: 'string',
            },
            {
              name: 'assetPrice',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'supportsInterface',
          inputs: [
            {
              name: 'interfaceId',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'transferOwnership',
          inputs: [
            {
              name: 'newOwner',
              type: 'address',
              internalType: 'address',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'updateAssetData',
          inputs: [
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'assetUri',
              type: 'string',
              internalType: 'string',
            },
            {
              name: 'assetPrice',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'uri',
          inputs: [
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'string',
              internalType: 'string',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'event',
          name: 'ApprovalForAll',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'operator',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'approved',
              type: 'bool',
              indexed: false,
              internalType: 'bool',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AssetDataSet',
          inputs: [
            {
              name: 'uri',
              type: 'string',
              indexed: false,
              internalType: 'string',
            },
            {
              name: 'assetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'price',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AssetMinted',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'BurntBatch',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'assetIds',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'BurntSingle',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'IGCminted',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'OwnershipTransferred',
          inputs: [
            {
              name: 'previousOwner',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'newOwner',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'TransferBatch',
          inputs: [
            {
              name: 'operator',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'from',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'to',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'ids',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
            {
              name: 'values',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'TransferSingle',
          inputs: [
            {
              name: 'operator',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'from',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'to',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'id',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'value',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'URI',
          inputs: [
            {
              name: 'value',
              type: 'string',
              indexed: false,
              internalType: 'string',
            },
            {
              name: 'id',
              type: 'uint256',
              indexed: true,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'error',
          name: 'AssetFactoryAssetNotFound',
          inputs: [
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155InsufficientBalance',
          inputs: [
            {
              name: 'sender',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'balance',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'needed',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'tokenId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155InvalidApprover',
          inputs: [
            {
              name: 'approver',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155InvalidArrayLength',
          inputs: [
            {
              name: 'idsLength',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'valuesLength',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155InvalidOperator',
          inputs: [
            {
              name: 'operator',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155InvalidReceiver',
          inputs: [
            {
              name: 'receiver',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155InvalidSender',
          inputs: [
            {
              name: 'sender',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ERC1155MissingApprovalForAll',
          inputs: [
            {
              name: 'operator',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'owner',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'OwnableInvalidOwner',
          inputs: [
            {
              name: 'owner',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'OwnableUnauthorizedAccount',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ReentrancyGuardReentrantCall',
          inputs: [],
        },
      ],
      inheritedFunctions: {
        balanceOf: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        balanceOfBatch: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        isApprovedForAll: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        safeBatchTransferFrom: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        safeTransferFrom: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        setApprovalForAll: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        supportsInterface: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        uri: 'lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol',
        onERC1155BatchReceived: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        onERC1155Received: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        owner: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
        renounceOwnership: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
        transferOwnership: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
      },
      deploymentFile: 'run-1746649111.json',
      deploymentScript: 'Deploy.s.sol',
    },
    AssetVault: {
      address: '0x2a264f26859166c5bf3868a54593ee716aebc848',
      abi: [
        {
          type: 'constructor',
          inputs: [
            {
              name: '_factory',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '_initialOwner',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'approveCaller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'balanceOf',
          inputs: [
            {
              name: 'user',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: 'balance',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'depositAssets',
          inputs: [
            {
              name: 'assetIds',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'depositIGC',
          inputs: [
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'getAssetFactoryAddress',
          inputs: [],
          outputs: [
            {
              name: 'factoryAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getIGCTokenId',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'uint8',
              internalType: 'uint8',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getIsApprovedCaller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
          ],
          outputs: [
            {
              name: 'approved',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'lockAsset',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'onERC1155BatchReceived',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'onERC1155Received',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'owner',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'renounceOwnership',
          inputs: [],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'revokeCaller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'supportsInterface',
          inputs: [
            {
              name: 'interfaceId',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'transferOwnership',
          inputs: [
            {
              name: 'newOwner',
              type: 'address',
              internalType: 'address',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'unlockAsset',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'withdrawAssets',
          inputs: [
            {
              name: 'to',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetIds',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'withdrawIGC',
          inputs: [
            {
              name: 'to',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'event',
          name: 'ApprovedCaller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AssetLocked',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AssetUnlocked',
          inputs: [
            {
              name: 'account',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AssetsDeposited',
          inputs: [
            {
              name: 'from',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'assetIds',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AssetsWithdrawn',
          inputs: [
            {
              name: 'to',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'assetIds',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
            {
              name: 'amounts',
              type: 'uint256[]',
              indexed: false,
              internalType: 'uint256[]',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'IGCDeposited',
          inputs: [
            {
              name: 'from',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'IGCWithdrawn',
          inputs: [
            {
              name: 'to',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'OwnershipTransferred',
          inputs: [
            {
              name: 'previousOwner',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
            {
              name: 'newOwner',
              type: 'address',
              indexed: true,
              internalType: 'address',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'RevokedCaller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
          ],
          anonymous: false,
        },
        {
          type: 'error',
          name: 'AssetVaultArraysLengthMismatch',
          inputs: [
            {
              name: 'assetIdsLength',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amountsLength',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetVaultInsufficientBalance',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'balance',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetVaultUnauthorizedCaller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'OwnableInvalidOwner',
          inputs: [
            {
              name: 'owner',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'OwnableUnauthorizedAccount',
          inputs: [
            {
              name: 'account',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ReentrancyGuardReentrantCall',
          inputs: [],
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        onERC1155Received: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        supportsInterface: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        owner: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
        renounceOwnership: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
        transferOwnership: 'lib/openzeppelin-contracts/contracts/access/Ownable.sol',
      },
      deploymentFile: 'run-1746649111.json',
      deploymentScript: 'Deploy.s.sol',
    },
    AssetTrade: {
      address: '0xd04ff4a75edd737a73e92b2f2274cb887d96e110',
      abi: [
        {
          type: 'constructor',
          inputs: [
            {
              name: '_assetVaultAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'acceptProposal',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'cancelProposal',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'createProposal',
          inputs: [
            {
              name: 'receiver',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetAId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'assetBId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'getAssetVaultAddress',
          inputs: [],
          outputs: [
            {
              name: 'vaultAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getProposal',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: 'proposal',
              type: 'tuple',
              internalType: 'struct AssetTrade.Proposal',
              components: [
                {
                  name: 'proposer',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'receiver',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'assetAId',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'assetBId',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'status',
                  type: 'uint8',
                  internalType: 'enum AssetTrade.ProposalStatus',
                },
              ],
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getProposalCount',
          inputs: [],
          outputs: [
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'onERC1155BatchReceived',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'onERC1155Received',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'rejectProposal',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'supportsInterface',
          inputs: [
            {
              name: 'interfaceId',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'event',
          name: 'ProposalAccepted',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'ProposalCanceled',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'ProposalCreated',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'ProposalRejected',
          inputs: [
            {
              name: 'proposalId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'error',
          name: 'AssetTradeNotProposer',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'proposer',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetTradeNotReceiver',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'receiver',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetTradeProposalNotPending',
          inputs: [
            {
              name: 'status',
              type: 'uint8',
              internalType: 'enum AssetTrade.ProposalStatus',
            },
          ],
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        onERC1155Received: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        supportsInterface: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
      },
      deploymentFile: 'run-1746649111.json',
      deploymentScript: 'Deploy.s.sol',
    },
    AssetAuction: {
      address: '0xc6b8fbf96cf7bbe45576417ec2163acecfa88ecc',
      abi: [
        {
          type: 'constructor',
          inputs: [
            {
              name: '_assetVaultAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'cancelAuction',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'completeAuction',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'createAuction',
          inputs: [
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'reservePrice',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'blocksDuration',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'getAssetVaultAddress',
          inputs: [],
          outputs: [
            {
              name: 'vaultAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getAuction',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: 'auction',
              type: 'tuple',
              internalType: 'struct AssetAuction.Auction',
              components: [
                {
                  name: 'seller',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'highestBidder',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'winningBidder',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'assetId',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'reservePrice',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'deadlineBlock',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'highestBid',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'winningBid',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'status',
                  type: 'uint8',
                  internalType: 'enum AssetAuction.AuctionStatus',
                },
              ],
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getAuctionCount',
          inputs: [],
          outputs: [
            {
              name: 'count',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'onERC1155BatchReceived',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'onERC1155Received',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'placeBid',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'supportsInterface',
          inputs: [
            {
              name: 'interfaceId',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'event',
          name: 'AuctionCanceled',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AuctionCreated',
          inputs: [
            {
              name: 'seller',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'auctionId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'assetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'reservePrice',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'blocksDuration',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AuctionEnded',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'winningBidder',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'winningBid',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'AuctionReserveNotMet',
          inputs: [
            {
              name: 'auctionId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'reservePrice',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'highestBid',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'BidPlaced',
          inputs: [
            {
              name: 'bidder',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'auctionId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'amount',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'error',
          name: 'AssetAuctionBidBelowHighestBid',
          inputs: [
            {
              name: 'amount',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'highestBid',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetAuctionDeadlineHasPassed',
          inputs: [
            {
              name: 'currentBlock',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'deadlineBlock',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetAuctionDeadlineNotPassed',
          inputs: [
            {
              name: 'currentBlock',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'deadlineBlock',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetAuctionNotOpen',
          inputs: [
            {
              name: 'status',
              type: 'uint8',
              internalType: 'enum AssetAuction.AuctionStatus',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetAuctionNotTheSeller',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'seller',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ReentrancyGuardReentrantCall',
          inputs: [],
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        onERC1155Received: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        supportsInterface: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
      },
      deploymentFile: 'run-1746649111.json',
      deploymentScript: 'Deploy.s.sol',
    },
    AssetRental: {
      address: '0x29a79095352a718b3d7fe84e1f14e9f34a35598e',
      abi: [
        {
          type: 'constructor',
          inputs: [
            {
              name: '_assetVaultAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'checkRentalStatus',
          inputs: [
            {
              name: 'rentalAssetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'createRental',
          inputs: [
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'price',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'blocksDuration',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'getAssetVaultAddress',
          inputs: [],
          outputs: [
            {
              name: 'vaultAddress',
              type: 'address',
              internalType: 'address',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getRentalAsset',
          inputs: [
            {
              name: 'rentalAssetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: 'rentalAsset',
              type: 'tuple',
              internalType: 'struct AssetRental.RentalAsset',
              components: [
                {
                  name: 'owner',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'renter',
                  type: 'address',
                  internalType: 'address',
                },
                {
                  name: 'assetId',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'price',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'blocksDuration',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'expiration',
                  type: 'uint256',
                  internalType: 'uint256',
                },
                {
                  name: 'status',
                  type: 'uint8',
                  internalType: 'enum AssetRental.RentalStatus',
                },
              ],
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getRentalAssetCount',
          inputs: [],
          outputs: [
            {
              name: 'count',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'getRentedAssetBalance',
          inputs: [
            {
              name: 'user',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'assetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [
            {
              name: 'balance',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          stateMutability: 'view',
        },
        {
          type: 'function',
          name: 'onERC1155BatchReceived',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'uint256[]',
              internalType: 'uint256[]',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'onERC1155Received',
          inputs: [
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'address',
              internalType: 'address',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: '',
              type: 'bytes',
              internalType: 'bytes',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'rentAsset',
          inputs: [
            {
              name: 'rentalAssetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'supportsInterface',
          inputs: [
            {
              name: 'interfaceId',
              type: 'bytes4',
              internalType: 'bytes4',
            },
          ],
          outputs: [
            {
              name: '',
              type: 'bool',
              internalType: 'bool',
            },
          ],
          stateMutability: 'pure',
        },
        {
          type: 'function',
          name: 'unlistRental',
          inputs: [
            {
              name: 'rentalAssetId',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'function',
          name: 'updateRental',
          inputs: [
            {
              name: 'rentalAssetId',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'price',
              type: 'uint256',
              internalType: 'uint256',
            },
            {
              name: 'blocksDuration',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
          outputs: [],
          stateMutability: 'nonpayable',
        },
        {
          type: 'event',
          name: 'RentalAssetPosted',
          inputs: [
            {
              name: 'rentalOwner',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'rentalAssetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'RentalAssetRelisted',
          inputs: [
            {
              name: 'rentalOwner',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'rentalAssetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'RentalAssetRented',
          inputs: [
            {
              name: 'renter',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'rentalAssetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
            {
              name: 'timeRented',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'RentalAssetUnlisted',
          inputs: [
            {
              name: 'rentalOwner',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'rentalAssetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'event',
          name: 'RentalAssetUpdated',
          inputs: [
            {
              name: 'rentalOwner',
              type: 'address',
              indexed: false,
              internalType: 'address',
            },
            {
              name: 'rentalAssetId',
              type: 'uint256',
              indexed: false,
              internalType: 'uint256',
            },
          ],
          anonymous: false,
        },
        {
          type: 'error',
          name: 'AssetRentalAlreadyAvailable',
          inputs: [
            {
              name: 'status',
              type: 'uint8',
              internalType: 'enum AssetRental.RentalStatus',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetRentalNotAvailable',
          inputs: [
            {
              name: 'status',
              type: 'uint8',
              internalType: 'enum AssetRental.RentalStatus',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetRentalNotExpired',
          inputs: [
            {
              name: 'expiration',
              type: 'uint256',
              internalType: 'uint256',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetRentalNotTheOwner',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'owner',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'AssetRentalNotTheRenter',
          inputs: [
            {
              name: 'caller',
              type: 'address',
              internalType: 'address',
            },
            {
              name: 'renter',
              type: 'address',
              internalType: 'address',
            },
          ],
        },
        {
          type: 'error',
          name: 'ReentrancyGuardReentrantCall',
          inputs: [],
        },
      ],
      inheritedFunctions: {
        onERC1155BatchReceived: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        onERC1155Received: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
        supportsInterface: 'lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol',
      },
      deploymentFile: 'run-1746649111.json',
      deploymentScript: 'Deploy.s.sol',
    },
  },
} as const

export default deployedContracts
