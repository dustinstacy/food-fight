@use 'styles/breakpoints' as *;

///////////////////////////////////////////
/// Button Styles                       ///
//////////////////////////////////////////

.button {
  padding: 4px 8px;
  font-family: 'Tilt Warp', sans-serif;
  font-size: 14px;
  font-weight: 800;
  color: var(--white-color);
  letter-spacing: 2px;
  text-decoration: none;
  text-shadow:
    1px 1px 1px var(--black-color),
    -1px -1px 1px var(--black-color),
    1px -1px 1px var(--black-color),
    -1px 1px 1px var(--black-color);
  cursor: pointer;
  background: var(--secondary3-color);
  border: 2px solid var(--black-color);
  border-radius: 6px;
  box-shadow: 0 4px 0 var(--black-color);
  transition:
    background-color 0.2s ease,
    transform 0.15s ease,
    box-shadow 0.15s ease,
    outline-offset 0.1s ease;

  @media screen and (min-width: $sm) {
    padding: 6px 12px;
    font-size: 16px;
  }

  @media screen and (min-width: $md) {
    padding: 7px 14px;
    font-size: 18px;
  }

  @media screen and (min-width: $lg) {
    padding: 8px 16px;
    font-size: 20px;
  }

  // Focus (Accessibility for keyboard nav)
  &:focus-visible {
    outline: 3px solid var(--focus-ring-color, var(--primary3-color));
  }

  // Hover (only when not disabled)
  &:not(.disabled, [disabled]):hover {
    background: var(--primary-color);
  }

  // Active (only when not disabled)
  &:not(.disabled, [disabled]):active {
    box-shadow: 0 0 0 var(--black-color);
    transform: translateY(2px);
  }

  // Disabled State (using class OR attribute)
  &.disabled,
  &[disabled],
  &[aria-disabled='true'] {
    color: var(--dark-gray-color);
    background: var(--gray-color);
    border-color: var(--black-color);
    box-shadow: 0 0 0 var(--black-color);
    transform: translateY(0);

    // Prevent hover/active effects visually when disabled
    &:hover {
      background: var(--gray-color);
    }

    &:active {
      box-shadow: 0 0 0 var(--black-color);
      transform: translateY(0);
    }
  }
}
